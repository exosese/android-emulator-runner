name: Manually triggered workflow
on:
  workflow_dispatch:
    inputs:
      os:
        description: 'OS'
        required: true
        default: 'ubuntu-latest'
      api-level:
        description: 'API level of the platform and system image'
        required: true
        default: '34'
      system-image-api-level:
        description: 'API level of the system image'
      target:
        description: 'System image target'
        required: true
        default: 'google_apis'  # FIXED for better networking
      arch:
        description: 'CPU architecture'
        default: 'x86_64'
      emulator-options:
        description: 'Options for emulator launch'
        default: '-no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim -dns-server 8.8.8.8'  # DNS fix added
      emulator-build:
        description: 'Specific emulator build number'
      channel:
        description: 'SDK channel'
        default: 'stable'
      script:
        description: 'Script to run after emulator is ready'
        required: true
        default: './gradlew connectedDebugAndroidTest'

jobs:
  test:
    runs-on: ${{ github.event.inputs.os }}
    env:
      JAVA_TOOL_OPTIONS: -Xmx4g
    timeout-minutes: 15

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build, test, and lint (Node)
      run: |
        npm install
        npm run build
        npm run lint
        npm test

    - uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: 23

    - uses: gradle/actions/setup-gradle@v4

    - name: Enable KVM for Linux
      if: runner.os == 'Linux'
      run: |
        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
        sudo udevadm control --reload-rules
        sudo udevadm trigger --name-match=kvm

    - name: Launch emulator, test internet, and run tests
      uses: ./  # your local custom emulator action
      with:
        api-level: ${{ github.event.inputs.api-level }}
        target: ${{ github.event.inputs.target }}
        arch: ${{ github.event.inputs.arch }}
        system-image-api-level: ${{ github.event.inputs.system-image-api-level }}
        profile: Galaxy Nexus
        emulator-options: ${{ github.event.inputs.emulator-options }}
        emulator-build: ${{ github.event.inputs.emulator-build }}
        channel: ${{ github.event.inputs.channel }}
        working-directory: ./test-fixture/
        script: |
          adb wait-for-device
          echo "Forcing network reset..."
          adb shell svc wifi disable
          adb shell svc wifi enable
          adb shell settings put global airplane_mode_on 1
          adb shell am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true
          sleep 2
          adb shell settings put global airplane_mode_on 0
          adb shell am broadcast -a android.intent.action.AIRPLANE_MODE --ez state false
          echo "Checking internet connectivity from emulator..."
          adb shell ping -c 4 8.8.8.8
          echo "Running test script..."
          ${{ github.event.inputs.script }}
